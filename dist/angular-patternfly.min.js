angular.module("patternfly.card",[]),angular.module("patternfly.charts",[]),angular.module("patternfly.form",[]),angular.module("patternfly",["patternfly.autofocus","patternfly.card","patternfly.form","patternfly.notification","patternfly.select","patternfly.validation"]),angular.module("patternfly.autofocus",[]).directive("pfFocused",function($timeout){"use strict";return{restrict:"A",link:function(scope,element,attrs){scope.$watch(attrs.pfFocused,function(newValue){$timeout(function(){newValue&&(element[0].focus(),element[0].select&&element[0].select())})})}}}),angular.module("patternfly.card").directive("pfAggregateTypeCard",function(){"use strict";return{restrict:"A",scope:{types:"="},templateUrl:"card/aggregatetype/aggregate-type.html"}}),angular.module("patternfly.card").directive("pfCard",function(){"use strict";return{restrict:"A",transclude:!0,templateUrl:"card/basic/card.html",scope:{headtitle:"@",subtitle:"@",hidetopborder:"@"},controller:["$scope",function($scope){$scope.getClasses=function(){return $scope.hidetopborder&&"true"===$scope.hidetopborder.toString()?"card-pf":"card-pf card-pf-accented"}}]}}),angular.module("patternfly.card").directive("pfObjStatus",function(){"use strict";return{restrict:"A",scope:{objectType:"=type",url:"="},templateUrl:"card/objectstatus/object-status-tile.html"}}),function(c3){"use strict";angular.module("patternfly.charts").directive("c3Chart",["$timeout",function($timeout){return{restrict:"A",scope:{config:"="},template:'<div id=""></div>',replace:!0,link:function(scope,element,attrs){var chartData=scope.config;chartData.bindto="#"+attrs.id,$timeout(function(){c3.generate(chartData)},100)}}}])}(c3),angular.module("patternfly.charts").factory("ChartsMixin",function(){"use strict";var getDefaultPoint=function(){return{show:!0,r:5}},getDefaultRadialDonut=function(title){return{title:title,label:{show:!1},width:10}},getDefaultRadialSize=function(){return{height:130}},getDefaultRadialColor=function(){return{pattern:["#0088CE","#D1D1D1"]}},getDefaultRadialTooltip=function(){return{show:!1}},getDefaultRadialLegend=function(){return{show:!1}},getDefaultRadialConfig=function(title){return{donut:getDefaultRadialDonut(title),size:getDefaultRadialSize(),legend:getDefaultRadialLegend(),color:getDefaultRadialColor(),tooltip:getDefaultRadialTooltip()}},getDefaultAreaArea=function(){return{zerobased:!0}},getDefaultAreaSize=function(){return{height:100}},getDefaultAreaPoint=function(){return{r:1,focus:{expand:{r:4}}}},getDefaultAreaColor=function(){return{pattern:["#3f9c35","#ec7a08","#0088ce","#00659c","#cc0000"]}},getDefaultAreaLegend=function(){return{show:!1}},getDefaultAreaTooltip=function(){return{show:!1}},getDefaultAreaConfig=function(){return{area:getDefaultAreaArea(),size:getDefaultAreaSize(),point:getDefaultAreaPoint(),color:getDefaultAreaColor(),legend:getDefaultAreaLegend(),tooltip:getDefaultRadialTooltip()}},getDefaultSparklineArea=function(){return{zerobased:!0}},getDefaultSparklineSize=function(){return{height:40}},getDefaultSparklineAxis=function(){return{x:{show:!1},y:{show:!1}}},getDefaultSparklineColor=function(){return{pattern:["#0088ce","#00659c","#3f9c35","#ec7a08","#cc0000"]}},getDefaultSparklineLegend=function(){return{show:!1}},getDefaultSparklinePoint=function(){return{show:!1}},getDefaultSparklineTooltip=function(tooltipTextFn){return tooltipTextFn=tooltipTextFn||function(data){return data.value},{contents:function(d){return'<span class="c3-tooltip-sparkline">'+tooltipTextFn(d[0])+"</span>"}}},getDefaultSparklineConfig=function(tooltipTextFn){return{area:getDefaultSparklineArea(),size:getDefaultSparklineSize(),axis:getDefaultSparklineAxis(),color:getDefaultSparklineColor(),legend:getDefaultSparklineLegend(),point:getDefaultSparklinePoint(),tooltip:getDefaultSparklineTooltip(tooltipTextFn)}},getDefaultHeatmapColorPattern=function(){return["#d4f0fa","#F9D67A","#EC7A08","#CE0000"]},defaultHeatmapBlockPadding=1,getDefaultHeatmapColor=function(){return d3.scale.threshold().domain([.7,.8,.9]).range(this.getDefaultHeatmapColorPattern())};return{getDefaultPoint:getDefaultPoint,getDefaultRadialConfig:getDefaultRadialConfig,getDefaultRadialDonut:getDefaultRadialDonut,getDefaultRadialSize:getDefaultRadialSize,getDefaultRadialColor:getDefaultRadialColor,getDefaultRadialTooltip:getDefaultRadialTooltip,getDefaultRadialLegend:getDefaultRadialLegend,getDefaultAreaConfig:getDefaultAreaConfig,getDefaultAreaArea:getDefaultAreaArea,getDefaultAreaSize:getDefaultAreaSize,getDefaultAreaPoint:getDefaultAreaPoint,getDefaultAreaColor:getDefaultAreaColor,getDefaultAreaLegend:getDefaultAreaLegend,getDefaultAreaTooltip:getDefaultAreaTooltip,getDefaultSparklineConfig:getDefaultSparklineConfig,getDefaultSparklineArea:getDefaultSparklineArea,getDefaultSparklineAxis:getDefaultSparklineAxis,getDefaultSparklineColor:getDefaultSparklineColor,getDefaultSparklineLegend:getDefaultSparklineLegend,getDefaultSparklinePoint:getDefaultSparklinePoint,getDefaultSparklineSize:getDefaultSparklineSize,getDefaultSparklineTooltip:getDefaultSparklineTooltip,getDefaultHeatmapColorPattern:getDefaultHeatmapColorPattern,defaultHeatmapBlockPadding:defaultHeatmapBlockPadding,getDefaultHeatmapColor:getDefaultHeatmapColor}}),angular.module("patternfly.charts").directive("pfDonutPctChart",["ChartsMixin","$timeout",function(chartsMixin,$timeout){"use strict";return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"charts/donut/donut-percent-chart.html",controller:["$scope",function($scope){$scope.donutChartId="donutChart",$scope.config.chartId&&($scope.donutChartId=$scope.config.chartId+$scope.donutChartId),void 0===$scope.data.available&&($scope.data.available=$scope.data.total-$scope.data.used),$scope.getStatusColor=function(used,thresholds){return thresholds?used>=thresholds.error?"#CC0000":used>=thresholds.warning?"#EC7A08":"#0088CE":"#0088CE"},$scope.statusDonutColor=function(scope){var color={pattern:[]},percentUsed=scope.data.used/scope.data.total*100;return color.pattern[0]=scope.getStatusColor(percentUsed,scope.config.thresholds),color.pattern[1]="#D1D1D1",color};var donutTooltip={contents:function(d){return'<span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+Math.round(100*d[0].ratio)+'%:</span><span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+d[0].value+" "+$scope.config.totalUnits+" "+d[0].name+"</span>"}};$scope.getDonutData=function(scope){return{columns:[["Used",scope.data.used],["Available",scope.data.available]],type:"donut",donut:{label:{show:!1}},groups:[["used","available"]],order:null}},$scope.defaultDonutConfig=chartsMixin.getDefaultRadialConfig($scope.config.totalUnits),$scope.defaultDonutConfig.color=$scope.statusDonutColor($scope),$scope.defaultDonutConfig.tooltip=donutTooltip,$scope.config.donutConfig=$.extend(!0,angular.copy($scope.defaultDonutConfig),$scope.config.donutConfig),$scope.config.donutConfig.data=$scope.getDonutData($scope)}],link:function(scope,element,attrs){attrs.$observe("config",function(){scope.config.donutConfig=$.extend(!0,angular.copy(scope.defaultDonutConfig),scope.config.donutConfig),scope.config.donutConfig.data=scope.getDonutData(scope),setupDonutChartTitle()}),attrs.$observe("donutConfig",function(){scope.config.donutConfig=$.extend(!0,angular.copy(scope.defaultDonutConfig),scope.config.donutConfig),scope.config.donutConfig.data=scope.getDonutData(scope),setupDonutChartTitle()}),attrs.$observe("data",function(){scope.config.donutConfig.data=scope.getDonutData(scope),setupDonutChartTitle()});var setupDonutChartTitle=function(){$timeout(function(){var donutChartTitle=element[0].querySelector("text.c3-chart-arcs-title");donutChartTitle.innerHTML='<tspan dy="0" x="0" class="utilization-chart-title-big">'+scope.data.used+'</tspan><tspan dy="20" x="0" class="utilization-chart-title-small">'+scope.config.totalUnits+" "+scope.config.usageDataName+"</tspan>"},100)}}}}]),angular.module("patternfly.charts").directive("pfHeatMap",["ChartsMixin","$timeout",function(chartsMixin,$timeout){"use strict";return{restrict:"A",scope:{parentid:"@",data:"="},replace:!0,template:'<svg style="width:100%; height: 100%;"></svg>',controller:["$scope","$rootScope",function($scope,$rootScope){$scope.blockPadding=chartsMixin.defaultHeatmapBlockPadding,$scope.heatmapColor=chartsMixin.getDefaultHeatmapColor(),$scope.heatmapColorPattern=chartsMixin.getDefaultHeatmapColorPattern(),$scope.determineBlockSize=function(){var sx,sy,x=$scope.width,y=$scope.height,n=$scope.data.length,px=Math.ceil(Math.sqrt(n*x/y)),py=Math.ceil(Math.sqrt(n*y/x));return sx=Math.floor(px*y/x)*px<n?y/Math.ceil(px*y/x):x/px,sy=Math.floor(py*x/y)*py<n?x/Math.ceil(x*py/y):y/py,Math.max(sx,sy)}}],link:function(scope,element,attrs){var thisComponent=element[0],updateSizes=function(){var parentDiv=document.querySelector("#"+scope.parentid);scope.width=parentDiv.clientWidth,scope.height=parentDiv.clientHeight,scope.blockSize=scope.determineBlockSize(),scope.rows=0===scope.blockSize?0:Math.floor(scope.height/scope.blockSize)};$timeout(function(){updateSizes(),scope.redraw()},100),scope.didInsertElement=function(){updateSizes(),scope.redraw(),this.resizeNotificationService.on("windowResizedLowLatency",this,this.handleResize)},scope.willDestroyElement=function(){this.resizeNotificationService.off("windowResizedLowLatency",this,this.handleResize)},scope.handleResize=function(){updateSizes(),scope.redraw()},scope.redraw=function(){function highlightBlock(block,active){block.style("fill-opacity",active?1:.4)}var data=scope.data,rows=scope.rows,blockSize=scope.blockSize,blockPadding=scope.blockPadding,color=scope.heatmapColor,component=thisComponent,svg=window.d3.select(thisComponent);svg.selectAll("*").remove();var blocks=svg.selectAll("rect").data(data).enter().append("rect");blocks.attr("x",function(d,i){return Math.floor(i/rows)*blockSize+blockPadding}).attr("y",function(d,i){return i%rows*blockSize+blockPadding}).attr("width",blockSize-2*blockPadding).attr("height",blockSize-2*blockPadding).style("fill",function(d){return color(d.value)}),blocks.on("mouseover",function(){blocks.call(highlightBlock,!1),d3.select(this).call(highlightBlock,!0)}),blocks.on("click",function(d){component.sendAction("click",d)}),blocks.each(function(d){$(this).tooltip({container:"body",animation:!1,placement:"top",trigger:"hover",html:!0,title:d.tooltip})}),svg.on("mouseleave",function(){blocks.call(highlightBlock,!0)})}}}}]),angular.module("patternfly.charts").directive("pfHeatMapLegend",["ChartsMixin","$timeout",function(chartsMixin,$timeout){"use strict";return{restrict:"A",scope:{legend:"="},replace:!0,templateUrl:"charts/heatmap/heatmap-legend.html",controller:["$scope","$rootScope",function($scope,$rootScope){var items=[],legendColors=chartsMixin.getDefaultHeatmapColorPattern();if($scope.legend)for(var i=$scope.legend.length-1;i>=0;i--)items.push({text:$scope.legend[i],color:legendColors[i]});$scope.legendItems=items}]}}]),angular.module("patternfly.charts").directive("pfPercentageUsed",["$timeout",function($timeout){"use strict";return{restrict:"A",scope:{charts:"="},replace:!0,templateUrl:"charts/progress/progress-chart.html",link:function($scope){$scope.$watch("charts",function(newVal,oldVal){"undefined"!=typeof newVal&&(angular.forEach($scope.charts,function(chart,index){chart.percentageUsed=100*(chart.start/chart.end)},$scope.charts),$scope.animate=!0,$timeout(function(){$scope.animate=!1},0))})}}}]),angular.module("patternfly.charts").directive("pfSparklineChart",["ChartsMixin","$timeout",function(chartsMixin,$timeout){"use strict";return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"charts/sparkline/sparkline-chart.html",controller:["$scope",function($scope){$scope.sparklineChartId="sparklineChart",$scope.config.chartId&&($scope.sparklineChartId=$scope.config.chartId+$scope.sparklineChartId);var utilizationSparklineTooltip=function(scope){return{contents:function(d){var percentUsed=Math.round(d[0].value/scope.data.total*100);return'<div id="utilization-sparkline-tooltip" class="module-triangle-bottom"><table class="c3-tooltip">  <tbody>    <tr>      <th colspan="2">'+d[0].x.toLocaleDateString()+'</th>    </tr>    <tr>      <td class="name">'+percentUsed+'%:      </td>      <td class="value" style="white-space: nowrap;">'+d[0].value+" "+scope.config.totalUnits+"_"+d[0].name+"</td>    </tr>  </tbody></table></div>"},position:function(data,width,height,element){try{var center=parseInt(element.getAttribute("x")),top=parseInt(element.getAttribute("y")),chartBox=document.querySelector("#sparklineChart").getBoundingClientRect(),graphOffsetX=document.querySelector("#sparklineChart g.c3-axis-y").getBoundingClientRect().right,x=Math.max(0,center+graphOffsetX-chartBox.left-Math.floor(width/2));x=Math.min(x,chartBox.width-width);var y=top-height;return{top:y,left:x}}catch(TypeError){}}}},utilizationSparklineAxis={x:{show:!1,type:"timeseries",tick:{format:"%Y-%m-%d"}},y:{show:!1}};$scope.getSparklineData=function(scope){var usage=[scope.config.usageDataName],dates=["dates"];if(scope.data)if(usage=usage.concat(usage,scope.data.data),$scope.data.dates&&scope.data.dates.length>0)for(var i=0;i<scope.data.dates.length;i++)dates.push(new Date(scope.data.dates[i]));else for(var today=new Date,d=scope.data.data.length-1;d>=0;d--)dates.push(new Date(today.getTime()-24*d*60*60*1e3));return{x:"dates",columns:[dates,usage],type:"area"}},$scope.defaultSparklineConfig=chartsMixin.getDefaultSparklineConfig($scope.config.totalUnits),$scope.defaultSparklineConfig.axis=utilizationSparklineAxis,$scope.defaultSparklineConfig.tooltip=utilizationSparklineTooltip($scope),$scope.config.sparklineConfig=$.extend(!0,angular.copy($scope.defaultSparklineConfig),$scope.config.sparklineConfig),$scope.config.sparklineConfig.data=$scope.getSparklineData($scope)}],link:function(scope,element,attrs){attrs.$observe("config",function(){scope.config.sparklineConfig=$.extend(!0,angular.copy(scope.defaultSparklineConfig),scope.config.sparklineConfig),scope.config.sparklineConfig.data=scope.getSparklineData(scope)})}}}]),angular.module("patternfly.charts").directive("pfTrends",["ChartsMixin","$timeout",function(chartsMixin,$timeout){return{restrict:"A",scope:{config:"=",data:"=",chartHeight:"=",id:"@"},replace:!0,templateUrl:"charts/trends/trends-chart.html",controller:["$scope","$rootScope",function($scope,$rootScope){var me=this;void 0===$scope.chartHeight&&($scope.chartHeight=71),$scope.containerId=$scope.id.trim(),$scope.chartId=$scope.containerId+"Chart",this.chartColor={pattern:["#6ca100","#0088ce"]};var chartTooltip=function(scope){return{contents:function(d){return'<div id="container-group-trends-tooltip"><table class="c3-tooltip">  <tbody>    <tr>      <th colspan="2">'+d[0].x.toLocaleDateString()+'</th>    </tr>    <tr">      <td class="name">        <span style="background-color:'+me.chartColor.pattern[0]+'"></span>'+d[0].name+':      </td>      <td class="value" style="white-space: nowrap;">         +'+d[0].value+" "+scope.config.tooltipSuffixes[0]+'      </td>    </tr>    <tr">      <div style="background-color:'+me.chartColor.pattern[1]+'"> </div>      <td class="name">        <span style="background-color:'+me.chartColor.pattern[1]+'"></span>'+d[1].name+':      </td>      <td class="value" style="white-space: nowrap;">         -'+d[1].value+" "+scope.config.tooltipSuffixes[1]+"      </td>    </tr>  </tbody></table></div>"},position:function(data,width,height,element){var center=parseInt(element.getAttribute("x")),top=parseInt(element.getAttribute("y")),chartBox=document.querySelector("#"+scope.chartId).getBoundingClientRect(),graphOffsetX=document.querySelector("#"+scope.chartId+" g.c3-axis-y").getBoundingClientRect().right,x=Math.max(0,center+graphOffsetX-chartBox.left-Math.floor(width/2));x=Math.min(x,chartBox.width-width);var y=top-height;return{top:y,left:x}}}},chartAxis={x:{show:!1,type:"timeseries",tick:{format:"%Y-%m-%d"}},y:{show:!1}};$scope.getChartData=function(){var id=$scope.id.trim(),trend1=[$scope.config.labels[0]],trend2=[$scope.config.labels[1]],dates=["dates"],data=this.data;if(data){var dateLength=0,keys=[];for(var key in data)keys.push(key);if(trend1=trend1.concat(data[keys[0]]),trend2=trend2.concat(data[keys[1]]),dateLength=data[keys[0]].length,data.dates&&data.dates.length>0)for(var i=0;i<data.dates.length;i++)dates.push(new Date(data.dates[i]));else for(var today=new Date,d=dateLength-1;d>=0;d--)dates.push(new Date(today.getTime()-24*d*60*60*1e3))}var retVal={x:"dates",columns:[dates,trend1,trend2],type:"area"};if("imageTrends"===id){var axes={},imgs=$scope.config.labels[0],totSize=$scope.config.labels[1];axes[imgs]="y",axes[totSize]="y2",retVal.axes=axes}return retVal};var chartPoint={show:!1},chartSize={height:$scope.chartHeight};$scope.chartConfig={point:chartPoint,size:chartSize,axis:chartAxis,color:this.chartColor,tooltip:chartTooltip($scope),data:$scope.getChartData()}}],link:function(scope,element,attrs){attrs.$observe("data",function(){scope.chartConfig.data=scope.getChartData()})}}}]),angular.module("patternfly.charts").directive("pfUtilizationChart",["ChartsMixin","$timeout",function(chartsMixin,$timeout){"use strict";return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"charts/utilization/utilization-chart.html",controller:["$scope",function($scope){void 0===$scope.data.available&&($scope.data.available=$scope.data.total-$scope.data.used),$scope.config.availableUnits=$scope.config.availableUnits||$scope.totalUnits}]}}]),angular.module("patternfly.form").directive("pfFormButtons",function(){"use strict";return{replace:!0,require:"^form",templateUrl:"form/form-buttons/views/form-buttons.html",scope:{pfHandleCancel:"&pfOnCancel",pfHandleSave:"&pfOnSave",pfWorking:"=",pfButtonContainerClass:"@"},link:function(scope,iElement,iAttrs,controller){void 0===scope.pfWorking&&(scope.pfWorking=!1),scope.isInvalid=function(){var invalid=controller.$invalid;return angular.forEach(controller,function(value){value&&value.$error&&value.$error.server&&(invalid=!1)}),invalid}}}}),angular.module("patternfly.form").directive("pfFormGroup",function(){"use strict";function getInput(element){var input=element.find("table");return 0===input.length&&(input=element.find("input"),0===input.length&&(input=element.find("select"),0===input.length&&(input=element.find("textarea")))),input}return{transclude:!0,replace:!0,require:"^form",templateUrl:"form/form-group/views/form-group.html",scope:{pfLabel:"@",pfField:"@",pfLabelClass:"@",pfInputClass:"@"},link:function(scope,iElement,iAttrs,controller){var field,input=getInput(iElement),type=input.attr("type");iAttrs.pfLabelClass||(iAttrs.pfLabelClass="col-sm-2"),iAttrs.pfInputClass||(iAttrs.pfInputClass="col-sm-5"),scope.pfField||(scope.pfField=input.attr("id")),field=scope.pfField,-1===["checkbox","radio","time"].indexOf(type)&&input.addClass("form-control"),input.attr("required")&&iElement.addClass("required"),controller[field]&&(scope.error=controller[field].$error),scope.hasErrors=function(){return controller[field]&&controller[field].$invalid&&controller[field].$dirty}}}}),angular.module("patternfly.notification",[]).provider("Notifications",function(){"use strict";this.delay=5e3,this.verbose=!0,this.notifications={},this.persist={error:!0,httpError:!0},this.setDelay=function(delay){return this.delay=delay,this},this.setVerbose=function(verbose){return this.verbose=verbose,this},this.setPersist=function(persist){this.persist=persist},this.$get=["$rootScope","$timeout","$log",function($rootScope,$timeout,$log){function createNotifyMethod(mode){return function(message){notifications.message(modes[mode].type,modes[mode].header,message,persist[mode]),verbose&&$log[modes[mode].log](message)}}var delay=this.delay,notifications=this.notifications,verbose=this.verbose,persist=this.persist;$rootScope.notifications={},$rootScope.notifications.data=[],$rootScope.notifications.remove=function(index){$rootScope.notifications.data.splice(index,1)};var scheduleMessagePop=function(){$timeout(function(){for(var i=0;i<$rootScope.notifications.data.length;i++)$rootScope.notifications.data[i].isPersistent||$rootScope.notifications.data.splice(i,1)},delay)};$rootScope.notifications||($rootScope.notifications.data=[]),notifications.message=function(type,header,message,isPersistent){$rootScope.notifications.data.push({type:type,header:header,message:message,isPersistent:isPersistent}),scheduleMessagePop()};var modes={info:{type:"info",header:"Info!",log:"info"},success:{type:"success",header:"Success!",log:"info"},error:{type:"danger",header:"Error!",log:"error"},warn:{type:"warning",header:"Warning!",log:"warn"}};for(var mode in modes)notifications[mode]=createNotifyMethod(mode);return notifications.httpError=function(message,httpResponse){message+=" ("+(httpResponse.data.message||httpResponse.data.cause||httpResponse.data.cause||httpResponse.data.errorMessage)+")",notifications.message("danger","Error!",message,persist.httpError),verbose&&$log.error(message)},notifications}]}).directive("pfNotification",function(){"use strict";return{scope:{pfNotificationType:"=",pfNotificationMessage:"=",pfNotificationHeader:"=",pfNotificationPersistent:"=",pfNotificationIndex:"="},restrict:"E",templateUrl:"notification/views/notification.html"}}).directive("pfNotificationList",function(){"use strict";return{restrict:"E",templateUrl:"notification/views/notification-list.html"}}),angular.module("patternfly.select",[]).directive("pfSelect",function($timeout){"use strict";return{restrict:"A",require:"?ngModel",scope:{selectPickerOptions:"=pfSelect"},link:function(scope,element,attrs,ngModel){element.selectpicker(scope.selectPickerOptions);var $render=ngModel.$render;if(ngModel.$render=function(){$render.apply(this,arguments),$timeout(function(){element.selectpicker("refresh")},0,!1)},attrs.ngOptions){var optionCollectionList=attrs.ngOptions.split("in "),optionCollection=optionCollectionList[optionCollectionList.length-1];scope.$watchCollection(optionCollection,function(){element.selectpicker("refresh")})}attrs.$observe("disabled",function(){element.selectpicker("refresh")})}}}),angular.module("patternfly.validation",[]).directive("pfValidation",function($timeout){"use strict";return{restrict:"A",require:"ngModel",scope:{pfValidation:"&",pfValidationDisabled:"="},link:function(scope,element,attrs,ctrl){function validate(){var val=scope.inputCtrl.$modelValue,valFunc=scope.pfValidation({input:val});attrs.pfValidation||(valFunc=!0);var valid=!val||valFunc||""===val;toggleErrorClass(scope.valEnabled&&!valid?!0:!1)}function toggleErrorClass(add){var messageElement=element.next(),parentElement=element.parent(),hasErrorM=parentElement.hasClass("has-error"),wasHidden=messageElement.hasClass("ng-hide");scope.inputCtrl.$setValidity("pf-validation",!add),add&&(hasErrorM||parentElement.addClass("has-error"),wasHidden&&messageElement.removeClass("ng-hide")),add||(hasErrorM&&parentElement.removeClass("has-error"),wasHidden||messageElement.addClass("ng-hide"))}scope.inputCtrl=ctrl,scope.valEnabled=!attrs.pfValidationDisabled,scope.$watch("pfValidationDisabled",function(newVal){scope.valEnabled=!newVal,newVal?(scope.inputCtrl.$setValidity("pfValidation",!0),toggleErrorClass(!1)):validate()}),attrs.pfValidation?$timeout(function(){validate()},0):!scope.inputCtrl.$valid&&scope.inputCtrl.$dirty&&toggleErrorClass(!0),scope.$watch("inputCtrl.$valid",function(isValid){toggleErrorClass(isValid?!1:!0)}),scope.$watch("inputCtrl.$modelValue",function(){validate()})}}}),angular.module("patternfly.card").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("card/aggregatetype/aggregate-type.html",'<div class="card-pf card-pf-accented card-pf-status card-pf-providers"><h2 class=card-pf-title ng-if="types.count > 1"><span class=card-pf-status-count>{{types.count}}</span> <span class=card-pf-status-type>{{types.name}}</span><div class="indicator providers"><span ng-repeat="type in types.types"><a class=count href={{type.href}}{{type.id}}><i class="provider-icon {{type.iconClass}}">{{ type.count }}</a></span></div></h2><h2 class=card-pf-title ng-if="types.count == 0">No Types</h2><h2 class=card-pf-title ng-if="types.count == 1"><i class="provider-icon provider-icon-large {{types.types[0].iconClass}}"></h2></div>'),$templateCache.put("card/basic/card.html","<div ng-class=getClasses() id=cardcontainer><div class=card-pf-heading><h2 class=card-pf-title id=headtitle>{{headtitle}}</h2></div><span ng-if=subtitle class=card-pf-subtitle id=subtitle>{{subtitle}}</span><div class=card-pf-body><ng-transclude></ng-transclude></div></div>"),$templateCache.put("card/objectstatus/object-status-tile.html",'<div class="card-pf card-pf-accented card-pf-status"><h2 class=card-pf-title><span class="fa pficon {{objectType.iconClass}} container-font-color"></span> <a href=#{{url}}/{{objectType.type}} ng-if=objectType.type><span class=card-pf-status-count>{{objectType.count}}</span> <span class=card-pf-status-type>{{objectType.name}}</span></a> <span ng-if=!objectType.type><span class=card-pf-status-count>{{objectType.count}}</span> <span class=card-pf-status-type>{{objectType.name}}</span></span><div class="indicator status"><span ng-repeat="status in objectType.status"><i class="fa-status-icon {{status.iconClass}}"><span class=count>{{status.count}}</span></span></div></h2></div>')}]),angular.module("patternfly.charts").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("charts/donut/donut-percent-chart.html","<div id=radial-chart-container class=radial-chart><div c3-chart id={{donutChartId}} config=config.donutConfig></div></div>"),$templateCache.put("charts/heatmap/heatmap-legend.html",'<div class="heatmap-legend heatmap-legend-container"><div ng-repeat="item in legendItems" class=heatmap-legend-container><li class=color-box style="background-color: {{item.color}}"></li><li class=legend-text>{{item.text}}</li></div></div>'),$templateCache.put("charts/progress/progress-chart.html",'<div class=percentageUsedBarChartWrapper><div class=perentageUsedBarChart ng-repeat="chart in charts"><div class=percentageUsedBarTitle><span>{{ chart.title }}</span> <span class=used>{{chart.start}} of {{chart.end}}</span></div><div class=percentageUsedBar><div class=percentageUsedBarFilled ng-class="{\'animate\': animate}" style=width:{{chart.percentageUsed}}%></div><div class=percentageUsedBarUnused></div></div></div></div>'),$templateCache.put("charts/sparkline/sparkline-chart.html","<div class=sparkline-chart><div c3-chart id={{sparklineChartId}} config=config.sparklineConfig></div></div>"),$templateCache.put("charts/trends/trends-chart.html","<div id={{id}}><div c3-chart id={{chartId}} config=chartConfig></div></div>"),$templateCache.put("charts/utilization/utilization-chart.html",'<div class=utilization-chart><h3 class="h4 count-title">{{config.title}}</h3><div class="count-utilization col-xs-12"><div class="available-text left col-xs-4"><span>{{data.total - data.used}} {{config.availableUnits}}</span></div><div class="available-text right col-xs-8"><div class="available-text col-xs-12 title-small title-small-upper"><span>Available</span></div><div class="available-text col-xs-12 title-small title-small-lower"><span>of {{data.total}} {{config.totalUnits}}</span></div></div></div><div pf-donut-pct-chart config=config data=data></div><div pf-sparkline-chart config=config data=data></div><p class="pull-left legend-text">{{config.legendLeftText}}</p><p class="pull-right legend-text">{{config.legendRightText}}</p></div>')}]),angular.module("patternfly.form").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("form/form-buttons/views/form-buttons.html",'<div class=form-group><div class="{{ pfButtonContainerClass }}"><div class="control-group buttons"><button class="btn btn-default" type=button ng-click=pfHandleCancel() ng-disabled=pfWorking translate>Cancel</button> <button class="btn btn-primary" ng-click="pfHandleSave(); pfWorking = true" ng-disabled="isInvalid() || pfWorking"><i class="icon-spinner icon-spin" ng-show=pfWorking></i> <span ng-show=pfWorking translate>Saving...</span> <span ng-hide=pfWorking translate>Save</span></button></div></div></div>'),$templateCache.put("form/form-group/views/form-group.html",'<div class=form-group ng-class="{ \'has-error\' : hasErrors() }"><label for="{{ pfField }}" class="control-label {{ pfLabelClass }}">{{ pfLabel }}</label><div class="{{ pfInputClass }}"><span ng-transclude></span> <span class=help-block ng-show=error.messages><ul><li ng-repeat="message in error.messages">{{ message }}</li></ul></span></div></div>')}]),angular.module("patternfly.notification").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("notification/views/notification-list.html",'<div data-ng-show="notifications.data.length > 0"><div ng-repeat="notification in notifications.data"><pf-notification pf-notification-type=notification.type pf-notification-header=notification.header pf-notification-message=notification.message pf-notification-persistent=notification.isPersistent pf-notification-index=$index></pf-notification></div></div>'),$templateCache.put("notification/views/notification.html",'<div class="alert alert-{{pfNotificationType}}"><button ng-show=pfNotificationPersistent type=button class=close ng-click=$parent.notifications.remove($index)><span aria-hidden=true>&times;</span><span class=sr-only>Close</span></button> <span class="pficon pficon-ok" ng-show="pfNotificationType == \'success\'"></span> <span class="pficon pficon-info" ng-show="pfNotificationType == \'info\'"></span> <span class=pficon-layered ng-show="pfNotificationType == \'danger\'"><span class="pficon pficon-error-octagon"></span> <span class="pficon pficon-error-exclamation"></span></span> <span class=pficon-layered ng-show="pfNotificationType == \'warning\'"><span class="pficon pficon-warning-triangle"></span> <span class="pficon pficon-warning-exclamation"></span></span> <strong>{{pfNotificationHeader}}</strong> {{pfNotificationMessage}}</div>')}]);